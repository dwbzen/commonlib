/*
 * TestFrame.java
 *
 * Created on __DATE__, __TIME__
 */

package ui;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

import javax.swing.JColorChooser;
import javax.swing.JPanel;

import mathlib.Point2D;
import mathlib.PointSet;
import mathlib.complex.Complex;
import mathlib.complex.ComplexPlane;
import mathlib.complex.TriangleGridColoring;
import mathlib.fractal.FractalFormula;
import mathlib.fractal.GenericIterationListener;
import mathlib.fractal.IterationPoint;
import mathlib.fractal.JuliaFractal;
import mathlib.fractal.MandlebrotFractal;
import mathlib.ifs.ChaosGame;
import mathlib.ifs.IteratedFunctionSystem;
import mathlib.util.BroadcastEvent;
import mathlib.util.IBroadcastClient;

/**
 *
 * @author  __USER__
 */
public class TestFrame extends javax.swing.JFrame implements IBroadcastClient {

	private static final long serialVersionUID = 339852441464720628L;
	
	public static enum FractalType {
		Mandelbrot, Julia
	};

	private FractalType currentFractalType;

	/** Creates new form TestFrame */
	public TestFrame() {
		initComponents();
		panelHeight = jPanel1.getHeight();
		panelWidth = jPanel1.getWidth();
		System.out
				.println("width = " + panelWidth + " height = " + panelHeight);
		g = jPanel1.getGraphics();

		g.setColor(Color.WHITE);
		g.fillRect(1, 1, panelWidth - 2, panelHeight - 2);
		outsideColorPanel.setBackground(outsideColor);
		insideColorPanel.setBackground(insideColor);
		// set up the gradient
		gradient = new Gradient(0, gradientColor2, 99, gradientColor1);
		gradient.addGradientPoint(199, Color.MAGENTA);
		gradient.addGradientPoint(299, Color.YELLOW);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		param1TextField = new javax.swing.JTextField();
		maxIterationsTextField = new javax.swing.JTextField();
		jPanel1 = new javax.swing.JPanel();
		canvas1 = new java.awt.Canvas();
		testPatternButton = new javax.swing.JButton();
		dotsButton = new javax.swing.JButton();
		clearButton = new javax.swing.JButton();
		mandelButton = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		bailoutTextField = new javax.swing.JTextField();
		outsideColorButton = new javax.swing.JButton();
		gradientButton = new javax.swing.JButton();
		outsideColorPanel = new javax.swing.JPanel();
		javax.swing.JButton insideColorButton = new javax.swing.JButton();
		insideColorPanel = new javax.swing.JPanel();
		gradientPanel = new javax.swing.JPanel();
		positionLabel = new javax.swing.JLabel();
		infoLabel = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		ltReal = new javax.swing.JTextField();
		lbReal = new javax.swing.JTextField();
		lbImag = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		ltImag = new javax.swing.JTextField();
		orbitPointText = new javax.swing.JTextField();
		jLabel9 = new javax.swing.JLabel();
		orbitPoint2Text = new javax.swing.JTextField();
		coloringMethodComboBox = new javax.swing.JComboBox();
		jLabel8 = new javax.swing.JLabel();
		jPanel3 = new javax.swing.JPanel();
		jLabel6 = new javax.swing.JLabel();
		rtReal = new javax.swing.JTextField();
		rtImag = new javax.swing.JTextField();
		rbReal = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		rbImag = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		orbitsButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("TestFrame");
		setBackground(new java.awt.Color(204, 204, 204));

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
		jLabel1.setText("Density:");

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
		jLabel2.setText("Max Iterations:");

		param1TextField.setText("10000");
		param1TextField.setName("param1TextBox");

		maxIterationsTextField.setText("500");
		maxIterationsTextField.setName("param2TextBox");

		jPanel1.setBackground(new java.awt.Color(255, 255, 255));
		jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(
				java.awt.Color.white, java.awt.Color.lightGray));
		jPanel1.setPreferredSize(new java.awt.Dimension(502, 502));
		jPanel1.setRequestFocusEnabled(false);
		jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseDragged(java.awt.event.MouseEvent evt) {
				jPanel1MouseDragged(evt);
			}
		});
		jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jPanel1MousePressed(evt);
			}

			public void mouseReleased(java.awt.event.MouseEvent evt) {
				jPanel1MouseReleased(evt);
			}
		});

		org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				jPanel1Layout.createSequentialGroup().add(174, 174, 174).add(
						canvas1,
						org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(328, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				org.jdesktop.layout.GroupLayout.TRAILING,
				jPanel1Layout.createSequentialGroup().addContainerGap(323,
						Short.MAX_VALUE).add(canvas1,
						org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
						org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(
						179, 179, 179)));

		testPatternButton.setLabel("Test Pattern");
		testPatternButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						testPatternButtonActionPerformed(evt);
					}
				});

		dotsButton.setText("IFS");
		dotsButton.setMaximumSize(new java.awt.Dimension(103, 25));
		dotsButton.setMinimumSize(new java.awt.Dimension(103, 25));
		dotsButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				dotsButtonActionPerformed(evt);
			}
		});

		clearButton.setText("Clear");
		clearButton.setMaximumSize(new java.awt.Dimension(103, 25));
		clearButton.setMinimumSize(new java.awt.Dimension(103, 25));
		clearButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				clearButtonActionPerformed(evt);
			}
		});

		mandelButton.setText("Mandel");
		mandelButton.setMaximumSize(new java.awt.Dimension(103, 25));
		mandelButton.setMinimumSize(new java.awt.Dimension(103, 25));
		mandelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mandelButtonActionPerformed(evt);
			}
		});

		jLabel3.setText("Bailout:");

		bailoutTextField.setText("4");

		outsideColorButton.setText("Outside Color");
		outsideColorButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						outsideColorButtonActionPerformed(evt);
					}
				});

		gradientButton.setText("Gradient");
		gradientButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				gradientButtonActionPerformed(evt);
			}
		});

		outsideColorPanel.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		outsideColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				outsideColorPanelMouseClicked(evt);
			}
		});

		org.jdesktop.layout.GroupLayout outsideColorPanelLayout = new org.jdesktop.layout.GroupLayout(
				outsideColorPanel);
		outsideColorPanel.setLayout(outsideColorPanelLayout);
		outsideColorPanelLayout.setHorizontalGroup(outsideColorPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(0, 52, Short.MAX_VALUE));
		outsideColorPanelLayout.setVerticalGroup(outsideColorPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(0, 21, Short.MAX_VALUE));

		insideColorButton.setText("Inside Color");
		insideColorButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						insideColorButtonActionPerformed(evt);
					}
				});

		insideColorPanel.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		insideColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				insideColorPanelMouseClicked(evt);
			}
		});

		org.jdesktop.layout.GroupLayout insideColorPanelLayout = new org.jdesktop.layout.GroupLayout(
				insideColorPanel);
		insideColorPanel.setLayout(insideColorPanelLayout);
		insideColorPanelLayout.setHorizontalGroup(insideColorPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(0, 52, Short.MAX_VALUE));
		insideColorPanelLayout.setVerticalGroup(insideColorPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(0, 26, Short.MAX_VALUE));

		gradientPanel.setBorder(javax.swing.BorderFactory
				.createLineBorder(new java.awt.Color(0, 0, 0)));
		gradientPanel.setMinimumSize(new java.awt.Dimension(400, 400));
		gradientPanel.setPreferredSize(new java.awt.Dimension(400, 400));

		org.jdesktop.layout.GroupLayout gradientPanelLayout = new org.jdesktop.layout.GroupLayout(
				gradientPanel);
		gradientPanel.setLayout(gradientPanelLayout);
		gradientPanelLayout.setHorizontalGroup(gradientPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(0, 398, Short.MAX_VALUE));
		gradientPanelLayout.setVerticalGroup(gradientPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(0, 22, Short.MAX_VALUE));

		positionLabel.setText("x=0, y=0");
		positionLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		infoLabel.setText("info");
		infoLabel.setBorder(javax.swing.BorderFactory
				.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

		jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		jLabel4.setText("Left Top:");

		ltReal.setText("-2.5");

		lbReal.setText("-2.5");

		lbImag.setText("-1.5");

		jLabel5.setText("Left Bottom:");

		ltImag.setText("1.5");

		orbitPointText.setText(".352+.582i");

		jLabel9.setText("Orbit Points:");

		orbitPoint2Text.setText(".352+.582i");

		org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout
				.setHorizontalGroup(jPanel2Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								org.jdesktop.layout.GroupLayout.TRAILING,
								jPanel2Layout
										.createSequentialGroup()
										.add(
												jPanel2Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(jLabel5).add(
																jLabel4).add(
																jLabel9))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												jPanel2Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.TRAILING)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																orbitPoint2Text,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																139,
																Short.MAX_VALUE)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																orbitPointText,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																139,
																Short.MAX_VALUE)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																lbReal,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																139,
																Short.MAX_VALUE)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																ltImag,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																139,
																Short.MAX_VALUE)
														.add(
																ltReal,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																139,
																Short.MAX_VALUE)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																lbImag,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																139,
																Short.MAX_VALUE))
										.add(43, 43, 43)));
		jPanel2Layout
				.setVerticalGroup(jPanel2Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								jPanel2Layout
										.createSequentialGroup()
										.add(2, 2, 2)
										.add(
												jPanel2Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(jLabel4)
														.add(
																ltReal,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.add(5, 5, 5)
										.add(
												ltImag,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.add(18, 18, 18)
										.add(
												jPanel2Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(jLabel5)
														.add(
																lbReal,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												lbImag,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												21,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.add(14, 14, 14)
										.add(
												jPanel2Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.TRAILING)
														.add(jLabel9)
														.add(
																orbitPointText,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												orbitPoint2Text,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(36, Short.MAX_VALUE)));

		coloringMethodComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Smooth", "Fibonacci Integer",
						"Fibonacci Sequence", "Test" }));

		jLabel8.setText("Coloring:");

		jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		jLabel6.setText("Right Top:");
		jLabel6.setFocusable(false);

		rtReal.setText("1.5");

		rtImag.setText("1.5");

		rbReal.setText("1.5");

		jLabel7.setText("Right Bottom:");
		jLabel7.setFocusable(false);

		rbImag.setText("-1.5");

		org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout
				.setHorizontalGroup(jPanel3Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								jPanel3Layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												jPanel3Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.TRAILING)
														.add(jLabel6).add(
																jLabel7))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												jPanel3Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING,
																false)
														.add(rtReal)
														.add(rtImag)
														.add(rbReal)
														.add(
																rbImag,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																153,
																Short.MAX_VALUE))
										.addContainerGap(
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));
		jPanel3Layout
				.setVerticalGroup(jPanel3Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								jPanel3Layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												jPanel3Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(jLabel6)
														.add(
																rtReal,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												rtImag,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												jPanel3Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(jLabel7)
														.add(
																rbReal,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												rbImag,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		jButton1.setText("Julia");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				juliaButtonActionPerformed(evt);
			}
		});

		orbitsButton.setText("Orbits");
		orbitsButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				orbitsButtonActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.TRAILING)
																						.add(
																								jLabel1)
																						.add(
																								jLabel2,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								96,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												layout
																														.createParallelGroup(
																																org.jdesktop.layout.GroupLayout.LEADING,
																																false)
																														.add(
																																param1TextField)
																														.add(
																																maxIterationsTextField,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																55,
																																Short.MAX_VALUE))
																										.add(
																												44,
																												44,
																												44)
																										.add(
																												jLabel3)
																										.add(
																												44,
																												44,
																												44)
																										.add(
																												bailoutTextField,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												42,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												testPatternButton,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												111,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																										.add(
																												32,
																												32,
																												32)
																										.add(
																												dotsButton,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												109,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
																		.add(
																				27,
																				27,
																				27)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								layout
																										.createParallelGroup(
																												org.jdesktop.layout.GroupLayout.TRAILING)
																										.add(
																												outsideColorButton,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												112,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																										.add(
																												insideColorButton,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												112,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																										.add(
																												gradientButton,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												112,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																						.add(
																								clearButton,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								104,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												mandelButton,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												87,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												org.jdesktop.layout.LayoutStyle.UNRELATED)
																										.add(
																												jButton1)
																										.add(
																												85,
																												85,
																												85)
																										.add(
																												orbitsButton))
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												layout
																														.createParallelGroup(
																																org.jdesktop.layout.GroupLayout.TRAILING,
																																false)
																														.add(
																																org.jdesktop.layout.GroupLayout.LEADING,
																																insideColorPanel,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																Short.MAX_VALUE)
																														.add(
																																org.jdesktop.layout.GroupLayout.LEADING,
																																outsideColorPanel,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																Short.MAX_VALUE))
																										.add(
																												42,
																												42,
																												42)
																										.add(
																												jLabel8)
																										.addPreferredGap(
																												org.jdesktop.layout.LayoutStyle.RELATED)
																										.add(
																												coloringMethodComboBox,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												127,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																						.add(
																								gradientPanel,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				jPanel2,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				jPanel1,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																		.add(
																				27,
																				27,
																				27)
																		.add(
																				jPanel3,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
										.addContainerGap(462, Short.MAX_VALUE))
						.add(
								org.jdesktop.layout.GroupLayout.TRAILING,
								layout
										.createSequentialGroup()
										.add(59, 59, 59)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.TRAILING)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																positionLabel,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																815,
																Short.MAX_VALUE)
														.add(
																org.jdesktop.layout.GroupLayout.LEADING,
																infoLabel,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																815,
																Short.MAX_VALUE))
										.add(662, 662, 662)));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.add(119, 119, 119)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				27,
																				27,
																				27)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.BASELINE)
																						.add(
																								param1TextField,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																						.add(
																								jLabel3)
																						.add(
																								bailoutTextField,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																						.add(
																								jLabel1))
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.BASELINE)
																						.add(
																								maxIterationsTextField,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																						.add(
																								jLabel2))
																		.add(
																				22,
																				22,
																				22))
														.add(
																layout
																		.createSequentialGroup()
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								layout
																										.createSequentialGroup()
																										.add(
																												layout
																														.createParallelGroup(
																																org.jdesktop.layout.GroupLayout.LEADING)
																														.add(
																																outsideColorButton,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																																25,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																														.add(
																																outsideColorPanel,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																										.addPreferredGap(
																												org.jdesktop.layout.LayoutStyle.RELATED)
																										.add(
																												layout
																														.createParallelGroup(
																																org.jdesktop.layout.GroupLayout.TRAILING)
																														.add(
																																insideColorButton)
																														.add(
																																insideColorPanel,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
																						.add(
																								layout
																										.createParallelGroup(
																												org.jdesktop.layout.GroupLayout.BASELINE)
																										.add(
																												jLabel8)
																										.add(
																												coloringMethodComboBox,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				layout
																						.createParallelGroup(
																								org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								gradientPanel,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								24,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																						.add(
																								gradientButton,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																								28,
																								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)))
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(testPatternButton)
														.add(
																dotsButton,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																mandelButton,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																clearButton,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(jButton1).add(
																orbitsButton))
										.add(20, 20, 20)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																jPanel1,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																jPanel3,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																jPanel2,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.add(21, 21, 21)
										.add(infoLabel)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(positionLabel).add(53, 53, 53)));

		layout.linkSize(new java.awt.Component[] { clearButton, dotsButton,
				mandelButton, testPatternButton },
				org.jdesktop.layout.GroupLayout.VERTICAL);

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void juliaButtonActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
		getBoundaries();
		currentFractalType = FractalType.Julia;
		drawFractal(FractalType.Julia);
	}

	//GEN-FIRST:event_jPanel1MouseDragged
	private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {
		newX = evt.getX();
		newY = evt.getY();
		positionLabel.setText("x= " + newX + ", y= " + newY);

	}//GEN-LAST:event_jPanel1MouseDragged

	public void paint(Graphics g) {
		super.paint(g);
		System.out.println("PAINT");
		displayGradient(this.gradientPanel);
		displayPoints();
	}

	//GEN-FIRST:event_jPanel1MouseReleased
	private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {
		newX = evt.getX();
		newY = evt.getY();
		positionLabel.setText("x= " + newX + ", y= " + newY);
		//
		// redraw using the new enclosing box
		// defined by startX, startY, newX, newY
		// Do this by calculating new left, right top, bottom coordinates
		// The new area is square - preserves the shape
		// the bottom right is the point at which the mouse is released
		// the length of the diagonal of the new square is determined by
		// the mouse drag
		//
		double dX = Math.abs((double) newX - startX);
		double dY = Math.abs((double) newY - startY);

		int diag = (int) Math.round(Math.sqrt(dX * dX + dY * dY));
		int len = (int) Math.round(Math.sqrt((diag * diag / 2)));
		if (len <= 4) {
			return;
		}
		System.out.println("diag, len= " + diag + ", " + len);
		System.out.println("start, new = " + startX + ", " + startY + ", "
				+ newX + ", " + newY);
		int rX, rY, lX, lY = 0; // right-x etc.

		rX = newX;
		rY = newY;
		lX = (startX < newX) ? rX - len : rX + len;
		lY = (startY < newY) ? rY - len : rY + len;

		System.out.println("l, r = " + lX + ", " + lY + ", " + rX + ", " + rY);
		g = jPanel1.getGraphics();
		g.drawRect(lX, lY, len, len);

		double scaleX = Math.abs(rightTop.x - leftTop.x)
				/ (double) (panelWidth - 2);
		double scaleY = Math.abs(leftBottom.y - leftTop.y)
				/ (double) (panelHeight - 2);
		System.out.println("scaleX, scaleY = " + scaleX + ", " + scaleY);

		double deltaX = scaleX * len;
		double deltaY = scaleY * len;
		leftTop.x += (scaleX * lX);
		leftTop.y -= (scaleY * lY);
		rightTop.x = (leftTop.x + deltaX);
		rightTop.y = leftTop.y;

		leftBottom.x = leftTop.x;
		leftBottom.y = leftTop.y - deltaY;
		rightBottom.x = rightTop.x;
		rightBottom.y = leftBottom.y;

		ltReal.setText(String.valueOf(leftTop.x));
		ltImag.setText(String.valueOf(leftTop.y));
		rtReal.setText(String.valueOf(rightTop.x));
		rtImag.setText(String.valueOf(rightTop.y));

		lbReal.setText(String.valueOf(leftBottom.x));
		lbImag.setText(String.valueOf(leftBottom.y));
		rbReal.setText(String.valueOf(rightBottom.x));
		rbImag.setText(String.valueOf(rightBottom.y));

		drawFractal(currentFractalType);

	}//GEN-LAST:event_jPanel1MouseReleased

	//GEN-FIRST:event_jPanel1MousePressed
	private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {
		startX = evt.getX();
		startY = evt.getY();
		positionLabel.setText("x= " + startX + " y= " + startY);
		infoLabel.setText("x= " + startX + " y= " + startY);

	}//GEN-LAST:event_jPanel1MousePressed

	//GEN-FIRST:event_gradientButtonActionPerformed
	private void gradientButtonActionPerformed(java.awt.event.ActionEvent evt) {
		displayGradient(this.gradientPanel);
	}//GEN-LAST:event_gradientButtonActionPerformed

	//GEN-FIRST:event_insideColorPanelMouseClicked
	private void insideColorPanelMouseClicked(java.awt.event.MouseEvent evt) {
		setInsideColor();
	}//GEN-LAST:event_insideColorPanelMouseClicked

	//GEN-FIRST:event_outsideColorPanelMouseClicked
	private void outsideColorPanelMouseClicked(java.awt.event.MouseEvent evt) {
		setOutsideColor();
	}//GEN-LAST:event_outsideColorPanelMouseClicked

	//GEN-FIRST:event_insideColorButtonActionPerformed
	private void insideColorButtonActionPerformed(java.awt.event.ActionEvent evt) {
		setInsideColor();
	}//GEN-LAST:event_insideColorButtonActionPerformed

	private void setInsideColor() {
		Color newColor = JColorChooser.showDialog(this, "Inside Color",
				insideColor);
		if (newColor != null) {
			insideColor = newColor;
			insideColorPanel.setBackground(insideColor);
		}
		this.repaint();
	}

	//GEN-FIRST:event_outsideColorButtonActionPerformed
	private void outsideColorButtonActionPerformed(
			java.awt.event.ActionEvent evt) {
		setOutsideColor();
	}//GEN-LAST:event_outsideColorButtonActionPerformed

	private void setOutsideColor() {
		Color newColor = JColorChooser.showDialog(this, "Outside Color",
				outsideColor);
		if (newColor != null) {
			outsideColor = newColor;
			outsideColorPanel.setBackground(outsideColor);
		}
		//this.repaint();
	}

	//GEN-FIRST:event_mandelButtonActionPerformed
	private void mandelButtonActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
		getBoundaries();
		currentFractalType = FractalType.Mandelbrot;
		drawFractal(FractalType.Mandelbrot);
	}

	private void getBoundaries() {
		leftTop.x = (ltReal.getText() != null && ltReal.getText().length() > 0) ? Double
				.parseDouble(ltReal.getText())
				: 0;
		leftTop.y = (ltImag.getText() != null && ltImag.getText().length() > 0) ? Double
				.parseDouble(ltImag.getText())
				: 0;

		leftBottom.x = (lbReal.getText() != null && lbReal.getText().length() > 0) ? Double
				.parseDouble(lbReal.getText())
				: 0;
		leftBottom.y = (lbImag.getText() != null && ltImag.getText().length() > 0) ? Double
				.parseDouble(lbImag.getText())
				: 0;

		rightTop.x = (rtReal.getText() != null && rtReal.getText().length() > 0) ? Double
				.parseDouble(rtReal.getText())
				: 0;
		rightTop.y = (rtImag.getText() != null && rtImag.getText().length() > 0) ? Double
				.parseDouble(rtImag.getText())
				: 0;

		rightBottom.x = (rbReal.getText() != null && rbReal.getText().length() > 0) ? Double
				.parseDouble(rbReal.getText())
				: 0;
		rightBottom.y = (rbImag.getText() != null && rtImag.getText().length() > 0) ? Double
				.parseDouble(rbImag.getText())
				: 0;

	}//GEN-LAST:event_mandelButtonActionPerformed

	private void drawFractal(FractalType ftype) {
		g = jPanel1.getGraphics();
		mandel = new MandelCanvas(panelWidth - 2, panelHeight - 2); // account for the border
		
		String maxItText = maxIterationsTextField.getText();
		String bailoutText = bailoutTextField.getText();
		int maxIterations = (maxItText == null || maxItText.length() == 0) ? 100
				: Integer.parseInt(maxItText);
		int bailout = (bailoutText == null || bailoutText.length() == 0) ? 4
				: Integer.parseInt(bailoutText);
		
		mandel.setBailout(bailout);
		mandel.setMaxIterations(maxIterations);

		if (ftype == FractalType.Mandelbrot) {
			mandel.setFractalFormula(new MandlebrotFractal());
		} else if (ftype == FractalType.Julia) {
			mandel.setFractalFormula(new JuliaFractal());
		}
		mandel.setLeftBottom(leftBottom);
		mandel.setLeftTop(leftTop);
		mandel.setRightBottom(rightBottom);
		mandel.setRightTop(rightTop);
		mandel.setColoringAlgorithm(new TriangleGridColoring());

		int totalIts = mandel.iterate();
		List<IterationPoint> iterationPoints = mandel.getIterationPoints();

		System.out.println("total its = " + totalIts);
		System.out.println("total points: " + iterationPoints.size());

		displayPoints();

	}

	private void displayPoints() {
		if (mandel == null)
			return;

		List<IterationPoint> iterationPoints = mandel.getIterationPoints();
		g = jPanel1.getGraphics();
		Iterator<IterationPoint> it = iterationPoints.iterator();
		int x;
		int y;
		while (it.hasNext()) {
			IterationPoint ip = it.next();
			x = ip.getX();
			y = ip.getY();
			//System.out.println("point " + x + ", " + y + " " + ip.getIterations() + " " + ip.isIn());
			if (ip.isIn()) {
				g.setColor(insideColor);
				g.drawOval(x, y, 0, 0);
			} else {
				if (gradient != null) {
					colorOutsidePoint(g, ip);
				} else {
					g.setColor(outsideColor);
					g.drawOval(x, y, 0, 0);
				}
			}
		}
	}

	private void orbitsButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Complex zarg = Complex.parseComplex(this.orbitPointText.getText());
		String maxItText = maxIterationsTextField.getText();
		int maxIterations = (maxItText == null || maxItText.length() == 0) ? 1000
				: Integer.parseInt(maxItText);
		FractalFormula ff = new MandlebrotFractal();
		ff.setMaxIterations(maxIterations);
		IterationPoint ip = new IterationPoint(zarg);
		GenericIterationListener listener = new GenericIterationListener();
		listener.addClient(this);
		ff.addIterationListener(listener);
		// reset the boundaries
		ComplexPlane plane = new ComplexPlane(1.25, 2.0); // -1 to +1 top, bottom
		reset(plane); // sets boundaryPlane
		ff.iteratePoint(ip);
	}

	public void receive(BroadcastEvent event) {
		if (event.getEventType().equals(
				BroadcastEvent.EVENT_TYPE.IterationComplete)) {
			long iterations = (Long) event.getNumberPayload();
			IterationPoint ip = (IterationPoint) event.getObjectPayload();
			infoLabel.setText("Complete after " + iterations + " iterations");
			return;
		}
		Complex z = (Complex) event.getNumberPayload();
		g = jPanel1.getGraphics();

		int height = jPanel1.getHeight();
		int width = jPanel1.getWidth();
		g.setColor(Color.BLUE);
		double temp = (z.x - boundaryPlane.getLeft())
				/ boundaryPlane.getWidth();

		int x = (int) (((z.x - boundaryPlane.getLeft()) / boundaryPlane
				.getWidth()) * width);
		int y = (int) (((boundaryPlane.getTop() - z.y) / boundaryPlane
				.getHeight()) * height);
		System.out.println("z, x, y: " + z + ", " + x + "," + y);

		g.drawOval(x, y, 1, 1);
	}

	/**
	 * This implements Ultra Fractal's smooth coloring scheme
	 * @param g
	 * @param ip
	 */
	private void colorOutsidePoint(Graphics g, IterationPoint ip) {
		double lp = Math.log(Math.log(this.mandel.getBailout()));
		double il = 1 / Math.log(mandel.getPower().x);
		double zmod = .05 * (ip.getIterations() + il * lp - il
				* Math.log(Math.log(ip.getZ().cabs())));
		Color c = gradient.getColor(zmod);
		g.setColor(c);
		g.drawOval(ip.getX(), ip.getY(), 0, 0);
	}

	//GEN-FIRST:event_clearButtonActionPerformed
	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {
		reset();
		g = jPanel1.getGraphics();

		int height = jPanel1.getHeight();
		int width = jPanel1.getWidth();
		Color c = g.getColor();
		g.setColor(Color.white);
		g.fillRect(0, 0, width - 1, height - 1);
		g.setColor(c);

	}//GEN-LAST:event_clearButtonActionPerformed

	//GEN-FIRST:event_dotsButtonActionPerformed
	private void dotsButtonActionPerformed(java.awt.event.ActionEvent evt) {
		drawPoints(outsideColor);
	}//GEN-LAST:event_dotsButtonActionPerformed

	private void drawPoints(Color color) {

		g = jPanel1.getGraphics();
		g.setColor(color);
		int x = 0;
		int y = 0;

		int height = jPanel1.getHeight();
		int width = jPanel1.getWidth();
		String param1 = param1TextField.getText();
		int npoints = (param1 == null || param1.length() == 0) ? 100000 : Integer
				.parseInt(param1);
		String param2 = bailoutTextField.getText();
		int repeats = (param2 == null || param2.length()==0 ) ? 1 : Integer.parseInt(param2);

		// TODO: SET the desired IFS here
		IteratedFunctionSystem ifs = IteratedFunctionSystem.Sierpinski1();
		
		ChaosGame game = new ChaosGame(ifs, npoints, repeats);
		game.setMaxIterations(npoints);
		PointSet<Number> pointSet = game.run();
		List<Point2D<Number>> points = pointSet.getPoints();
		double maxX = pointSet.getMaxXValue().doubleValue();
		double minX = pointSet.getMinXValue().doubleValue();
		double maxY = pointSet.getMaxYValue().doubleValue();
		double minY = pointSet.getMinYValue().doubleValue();
		double rangeX = maxX - minX;
		double rangeY = maxY - minY;
		for(Point2D<Number> point : points) {
			//x = (int) (point.getX().doubleValue() * width);
			//y = (int) (point.getY().doubleValue() * height);
			double xprime = (point.getX().doubleValue() - minX)/rangeX;
			double yprime = (point.getY().doubleValue() - minY)/rangeY;
			x = (int) (xprime * width);
			y = (int) (yprime *height);
			g.drawOval(x, y, 1, 1);
			//g.drawOval(x, y, 2, 2);
		}

		/*		for (int i = 0; i < npoints; i++) {
		 x = 1 + random.nextInt(width - 2);
		 y = 1 + random.nextInt(height - 2);
		 g.drawOval(x, y, 0, 0);
		 }
		 */
	}//GEN-LAST:event_jButton2ActionPerformed

	private void displayGradient(JPanel thePanel) {

		Graphics g = thePanel.getGraphics();
		int width = thePanel.getWidth();
		int height = thePanel.getHeight();
		for (int i = 0; i < Gradient.SIZE; i++) {
			Color c = gradient.getColor(i);
			g.setColor(c);
			g.drawLine(i, 0, i, width - 1);
		}
	}

	private void reset() {
		ltReal.setText("-2.5");
		ltImag.setText("1.5");
		lbReal.setText("-2.5");
		lbImag.setText("-1.5");
		rtReal.setText("1.5");
		rtImag.setText("1.5");
		rbReal.setText("1.5");
		rbImag.setText("-1.5");
		bailoutTextField.setText("128");
	}

	private void reset(ComplexPlane p) {
		ltReal.setText(String.valueOf(p.getLeftTop().x));
		ltImag.setText(String.valueOf(p.getLeftTop().y));
		lbReal.setText(String.valueOf(p.getLeftBottom().x));
		lbImag.setText(String.valueOf(p.getLeftBottom().y));

		rtReal.setText(String.valueOf(p.getRightTop().x));
		rtImag.setText(String.valueOf(p.getRightTop().y));
		rbReal.setText(String.valueOf(p.getRightBottom().x));
		rbImag.setText(String.valueOf(p.getRightBottom().y));
		boundaryPlane = p;
	}

	public void setBoundryPlane(ComplexPlane p) {
		this.boundaryPlane = p;
	}

	public ComplexPlane getBoundryPlane() {
		return boundaryPlane;
	}

	/**
	 * Sets boundry values of a given ComplexPlane
	 * from the 8 boundry text boxes: ltReal, ltImag, etc.
	 * 
	 * @param p ComplexPlane to set
	 */
	private void setPlaneBoundaries(ComplexPlane p) {
		p.setLeftTop(new Complex(ltReal.getText(), ltImag.getText()));
		p.setLeftBottom(new Complex(lbReal.getText(), lbImag.getText()));
		p.setRightTop(new Complex(rtReal.getText(), rtImag.getText()));
		p.setRightBottom(new Complex(rbReal.getText(), rbImag.getText()));
		p.setCenter(p.findCenter());
	}

	//GEN-FIRST:event_jButton1ActionPerformed
	private void testPatternButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		g = jPanel1.getGraphics();

		int height = jPanel1.getHeight();
		int width = jPanel1.getWidth();
		System.out.println("Pressed width = " + width + " height = " + height);

		g.setColor(Color.black);
		g.drawLine(1, 1, width - 2, height - 2);
		g.setColor(Color.BLUE);
		g.drawLine(width - 2, 1, 1, height - 2);
		g.setColor(Color.green);
		g.drawLine(width / 2, 1, width / 2, height);
		g.drawLine(1, height / 2, width, height / 2);
		g.setColor(Color.CYAN);

		int startx = width / 2;
		int starty = height / 2;
		int nw = 1;
		int nh = 1;
		for (int i = 0; i <= 24; i++) {
			g.drawRect(startx, starty, nw, nh);
			startx -= 10;
			starty -= 10;
			nw += 20;
			nh += 20;
		}
		g.setColor(Color.RED);
		startx = width / 2;
		starty = height / 2;
		nw = 0;
		nh = 0;
		for (int i = 0; i <= 24; i++) {
			g.drawOval(startx, starty, nw, nh);
			startx -= 10;
			starty -= 10;
			nw += 20;
			nh += 20;
		}

	}//GEN-LAST:event_jButton1ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new TestFrame().setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JTextField bailoutTextField;
	private javax.swing.ButtonGroup buttonGroup1;
	private java.awt.Canvas canvas1;
	private javax.swing.JButton clearButton;
	private javax.swing.JComboBox coloringMethodComboBox;
	private javax.swing.JButton dotsButton;
	private javax.swing.JButton gradientButton;
	private javax.swing.JPanel gradientPanel;
	private javax.swing.JLabel infoLabel;
	private javax.swing.JPanel insideColorPanel;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JTextField lbImag;
	private javax.swing.JTextField lbReal;
	private javax.swing.JTextField ltImag;
	private javax.swing.JTextField ltReal;
	private javax.swing.JButton mandelButton;
	private javax.swing.JTextField maxIterationsTextField;
	private javax.swing.JTextField orbitPoint2Text;
	private javax.swing.JTextField orbitPointText;
	private javax.swing.JButton orbitsButton;
	private javax.swing.JButton outsideColorButton;
	private javax.swing.JPanel outsideColorPanel;
	private javax.swing.JTextField param1TextField;
	private javax.swing.JLabel positionLabel;
	private javax.swing.JTextField rbImag;
	private javax.swing.JTextField rbReal;
	private javax.swing.JTextField rtImag;
	private javax.swing.JTextField rtReal;
	private javax.swing.JButton testPatternButton;
	// End of variables declaration//GEN-END:variables

	private Graphics g;
	private Graphics g2;
	private Random random = new Random();
	private int panelWidth;
	private int panelHeight;
	private Complex leftTop = new Complex();
	private Complex leftBottom = new Complex();
	private Complex rightTop = new Complex();
	private Complex rightBottom = new Complex();
	private Color outsideColor = Color.BLUE;
	private Color insideColor = Color.black;
	private Color gradientColor1 = Color.BLUE;
	private Color gradientColor2 = Color.RED;
	private GradientPaint gradientPaint;
	private Gradient gradient;
	private int startX = 0;
	private int startY = 0;
	private int newX = 0;
	private int newY = 0;
	private MandelCanvas mandel = null;
	private ComplexPlane boundaryPlane = null;
}